{"version":3,"sources":["ListItem.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","props","item","console","log","duration","easing","map","it","className","value","text","onChange","e","updateItem","target","key","icon","onClick","delete1","library","add","faTrash","App","handleChange","setState","currentItem","Date","now","deleteItem","updatedList","state","list","filter","addItem","preventDefault","data","date","id","onSubmit","this","type","placeholder","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAsCeA,MAlCf,SAAkBC,GAChB,IAAIC,EAAOD,EAAMC,KAEjB,OADAC,QAAQC,IAAIF,GAEV,8BACE,cAAC,IAAD,CAAUG,SAAU,IAAKC,OAAO,cAAhC,SACGJ,EAAKK,KAAI,SAACC,GACT,OACE,qBAAkBC,UAAU,OAA5B,SACE,8BACE,uBACEA,UAAU,QACVC,MAAOF,EAAGG,KACVC,SAAU,SAACC,GACTZ,EAAMa,WAAWD,EAAEE,OAAOL,MAAOF,EAAGQ,QAErC,IACH,+BACE,cAAC,IAAD,CACEP,UAAU,SACVQ,KAAK,QACLC,QAAS,WACPjB,EAAMkB,QAAQX,EAAGQ,UAGf,QAjBFR,EAAGQ,a,eCNzBI,IAAQC,IAAIC,K,IAgFGC,E,kDA5Eb,WAAYtB,GAAO,IAAD,8BAChB,cAAMA,IASRuB,aAAa,SAACX,GAEZ,EAAKY,SAAS,CACZC,YAAY,CACVf,KAAKE,EAAEE,OAAOL,MACdM,IAAIW,KAAKC,UAfG,EAmBlBC,WAAW,SAACb,GACV,IACIc,EADQ,EAAKC,MAAMC,KACCC,QAAO,SAAAzB,GAAE,OAAGA,EAAGQ,MAAMA,KAE7C,EAAKS,SAAS,CACZO,KAAKF,KAxBS,EA2BlBI,QAAQ,SAACrB,GACPA,EAAEsB,iBAEF,IAAIC,EAAM,EAAKL,MAAML,YACrB,GAAU,KAAPU,EACH,CACE,IAAIlC,EAAI,sBAAM,EAAK6B,MAAMC,MAAjB,CAAuBI,IAC/BjC,QAAQC,IAAIF,GACZ,EAAKuB,SAAS,CACZO,KAAM9B,EACNwB,YAAY,CACVf,KAAK,GACLK,IAAI,QAvCM,EAgDlBF,WAAW,SAACH,EAAKK,GACf,IACIc,EADQ,EAAKC,MAAMC,KACCzB,KAAI,SAAAC,GAI1B,OAHGA,EAAGQ,MAAMA,IACVR,EAAGG,KAAOA,GAELH,KAET,EAAKiB,SAAS,CACZO,KAAKF,KAvDP,EAAKC,MAAO,CACVC,KAAK,GACLN,YAAY,CACVf,KAAK,GACL0B,KAAK,KANO,E,qDA6DhB,OACE,sBAAK5B,UAAU,MAAf,UACE,4CACA,iCACE,uBAAM6B,GAAG,aAAaC,SAAUC,KAAKN,QAArC,UACE,uBAAOO,KAAK,OAAO7B,SAAU4B,KAAKhB,aAAcd,MAAO8B,KAAKT,MAAML,YAAYf,KAAM+B,YAAY,mBAChG,wBAAQD,KAAK,SAAb,sBAGF,cAAC,EAAD,CAAUvC,KAAMsC,KAAKT,MAAMC,KAAMb,QAASqB,KAAKX,WAAYf,WAAY0B,KAAK1B,oB,GAvEpE6B,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9a14b7a2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./ListItem.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport FlipMove from \"react-flip-move\";\r\nfunction ListItem(props) {\r\n  let item = props.item;\r\n  console.log(item);\r\n  return (\r\n    <div>\r\n      <FlipMove duration={500} easing=\"ease-in-out\">\r\n        {item.map((it) => {\r\n          return (\r\n            <div key={it.key} className=\"list\">\r\n              <p>\r\n                <input\r\n                  className=\"entry\"\r\n                  value={it.text}\r\n                  onChange={(e) => {\r\n                    props.updateItem(e.target.value, it.key);\r\n                  }}\r\n                />{\" \"}\r\n                <span>\r\n                  <FontAwesomeIcon\r\n                    className=\"faicon\"\r\n                    icon=\"trash\"\r\n                    onClick={() => {\r\n                      props.delete1(it.key);\r\n                    }}\r\n                  />\r\n                </span>{\" \"}\r\n              </p>\r\n            </div>\r\n          );\r\n        })}\r\n      </FlipMove>\r\n    </div>\r\n  );\r\n}\r\nexport default ListItem;\r\n","import \"./App.css\";\n\nimport React, { Component } from 'react'\nimport ListItem from \"./ListItem\"\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faTrash} from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faTrash)\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      list:[],\n      currentItem:{\n        text:\"\",\n        date:\"\"\n      }\n    }\n  }\n  handleChange=(e)=>{\n    // console.log(e.target.value);\n    this.setState({\n      currentItem:{\n        text:e.target.value,\n        key:Date.now()\n      }\n    })\n  }\n  deleteItem=(key)=>{\n    let items = this.state.list\n    let updatedList = items.filter(it=> it.key!==key) \n    // console.log(updatedList);\n    this.setState({\n      list:updatedList\n    })\n  }\n  addItem=(e)=>{\n    e.preventDefault();\n    // console.log(this.state.currentItem);\n    let data= this.state.currentItem\n    if(data!==\"\")\n    {\n      let item =[...this.state.list, data]\n      console.log(item);\n      this.setState({\n        list: item,\n        currentItem:{\n          text:\"\",\n          key:\"\"\n        }\n      }\n      // ,()=>{\n      //   console.log(this.state);\n      // }\n      )\n    }\n  }\n  updateItem=(text,key)=>{\n    let items = this.state.list\n    let updatedList = items.map(it=> {\n      if(it.key===key){\n        it.text = text\n      }\n      return it;\n    })\n    this.setState({\n      list:updatedList\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <h2>To-Do-List</h2>\n        <header>\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n            <input type=\"text\" onChange={this.handleChange} value={this.state.currentItem.text} placeholder=\"Enter the task\" />\n            <button type=\"submit\" >ADD</button>\n            </form>\n          </header>\n          <ListItem item={this.state.list} delete1={this.deleteItem} updateItem={this.updateItem}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}